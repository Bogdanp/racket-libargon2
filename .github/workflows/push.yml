on: push
name: build
jobs:
  build-linux-aarch64:
    name: build on Ubuntu aarch64
    runs-on: ubuntu-20.04-arm
    steps:
      - uses: actions/checkout@master
      - run: bin/build-linux-aarch64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: linux-aarch64
          path: artifacts/linux-aarch64

  build-linux-x86-64:
    name: build on Ubuntu x86-64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - run: bin/build-linux-x86-64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: linux-x86-64
          path: artifacts/linux-x86-64

  build-macos-aarch64:
    name: build on macOS aarch64
    runs-on: macOS-13-xlarge
    steps:
      - uses: actions/checkout@master
      - run: arch -arm64 bin/build-macos-aarch64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: macos-aarch64
          path: artifacts/macos-aarch64

  build-macos-x86-64:
    name: build on macOS x86-64
    runs-on: macOS-13
    steps:
      - uses: actions/checkout@master
      - run: bin/build-macos-x86-64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: macos-x86-64
          path: artifacts/macos-x86-64

  build-windows:
    name: build on Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@master
      - name: Install Windows SDK 8.1
        shell: pwsh
        run: |
          Invoke-Webrequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=323507" -OutFile sdksetup.exe
          Start-Process -Wait sdksetup.exe "/quiet"
      - run: bin/build-win32-i386.cmd
      - run: bin/build-win32-x86-64.cmd
      - uses: actions/upload-artifact@v4
        with:
          name: win32-i386
          path: artifacts/win32-i386
      - uses: actions/upload-artifact@v4
        with:
          name: win32-x86-64
          path: artifacts/win32-x86-64

  deploy:
    name: deploy
    needs:
      - build-linux-aarch64
      - build-linux-x86-64
      - build-macos-aarch64
      - build-macos-x86-64
      - build-windows
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v4
        with:
          name: linux-aarch64
          path: artifacts/linux-aarch64
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v4
        with:
          name: linux-x86-64
          path: artifacts/linux-x86-64
      - uses: actions/download-artifact@v4
        with:
          name: macos-aarch64
          path: artifacts/macos-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: macos-x86-64
          path: artifacts/macos-x86-64
      - uses: actions/download-artifact@v4
        with:
          name: win32-i386
          path: artifacts/win32-i386
      - uses: actions/download-artifact@v4
        with:
          name: win32-x86-64
          path: artifacts/win32-x86-64
      - run: bin/deploy.sh
        if: >-
          startsWith(github.ref, 'refs/tags/v')
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY_PASSPHRASE: ${{ secrets.DEPLOY_KEY_PASSPHRASE }}
